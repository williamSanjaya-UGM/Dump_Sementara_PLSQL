SELECT * FROM CUST_DETAIL_ORDER;
SELECT * FROM CUST_ORDER_PAYMENT;
SELECT * FROM CUST_DETAIL_PAYMENT;
SELECT * FROM FOOD_BEVERAGES_INFO;
SELECT * FROM CUST_MAST_ORDER ;

CREATE OR REPLACE PROCEDURE NEWINSERT_DETORDERS_AND_CASHIER_BY_PAYMENT(
    TRANS_ID IN NUMERIC
)AS
CURSOR FETCH_CUR IS
    SELECT HR.NAME CNAME,F.NAME FNAME,F.PRICE FPRICE FROM CUST_DETAIL_PAYMENT
    JOIN CUST_ORDER_PAYMENT USING(TRANSACTION_ID)
    JOIN CUST_DETAIL_ORDER ON ORDER_ID=MAST_ORDER_ID
    JOIN EMP_HR HR ON HR.ID=PIC_CASHIER
    JOIN FOOD_BEVERAGES_INFO F ON F.ID=FOOD_ID
    WHERE TRANSACTION_ID=TRANS_ID;
ORDERS_T FETCH_CUR%ROWTYPE;
TYPE ORDERS_TT IS TABLE OF ORDERS_T%TYPE;
L_ORDERS ORDERS_TT;
BEGIN
    OPEN FETCH_CUR;
    FETCH FETCH_CUR BULK COLLECT INTO L_ORDERS;
    CLOSE FETCH_CUR;
    FORALL I IN 1..L_ORDERS.COUNT
        INSERT INTO TEST_BAKUP_READ(NAME,FOOD_NAME,FOOD_PRICE) VALUES
        (L_ORDERS(I).CNAME,L_ORDERS(I).FNAME,L_ORDERS(I).FPRICE);
        COMMIT;
END;

EXECUTE NEWINSERT_DETORDERS_AND_CASHIER_BY_PAYMENT(21);
SELECT * FROM TEST_BAKUP_READ;

CREATE OR REPLACE PROCEDURE GET_DETORDERS_AND_CASHIER_BY_PAYMENT(
    TRANS_ID IN NUMERIC,
    FETCH_CUR OUT SYS_REFCURSOR
)AS
BEGIN
    OPEN FETCH_CUR FOR
        SELECT HR.NAME CNAME,F.NAME FNAME,F.PRICE FPRICE FROM CUST_DETAIL_PAYMENT
        JOIN CUST_ORDER_PAYMENT USING(TRANSACTION_ID)
        JOIN CUST_DETAIL_ORDER ON ORDER_ID=MAST_ORDER_ID
        JOIN EMP_HR HR ON HR.ID=PIC_CASHIER
        JOIN FOOD_BEVERAGES_INFO F ON F.ID=FOOD_ID
        WHERE TRANSACTION_ID=TRANS_ID;
END;

DECLARE
    I_TRANS_ID NUMERIC:=61;
    PASS_CURSOR SYS_REFCURSOR;
    TYPE REC_ORDERS_CASHIER_BYPAYMENT IS RECORD(CNAME VARCHAR2(25),FNAME VARCHAR2(25),FPRICE DECIMAL);
    V_RECORD REC_ORDERS_CASHIER_BYPAYMENT;
BEGIN
    GET_DETORDERS_AND_CASHIER_BY_PAYMENT(I_TRANS_ID,PASS_CURSOR);
    LOOP 
        FETCH PASS_CURSOR INTO V_RECORD;
        EXIT WHEN PASS_CURSOR%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('C NAME: '||V_RECORD.CNAME||' '||'FOOD: '||V_RECORD.FNAME||' '||V_RECORD.FPRICE);
    END LOOP;
    CLOSE PASS_CURSOR;
END;

CREATE OR REPLACE TYPE GET_DETORDERS_CASHIER AS OBJECT(
    HRN VARCHAR2(20),
    FNAME VARCHAR2(20),
    FPRICE DECIMAL
);

CREATE OR REPLACE TYPE TAB_DETORDERS_CASHIER AS TABLE OF GET_DETORDERS_CASHIER;

CREATE OR REPLACE PROCEDURE GET_DETORDERS_AND_CASHIER_BY_PAYMENT_V2(
    TRANS_ID IN NUMERIC,
    V_DETORDERS_CASHIER OUT TAB_DETORDERS_CASHIER
)AS
BEGIN
    SELECT GET_DETORDERS_CASHIER(HRN, FNAME,FPRICE) 
    BULK COLLECT INTO V_DETORDERS_CASHIER FROM
    (SELECT HR.NAME HRN ,F.NAME FNAME ,F.PRICE FPRICE FROM CUST_DETAIL_PAYMENT
    JOIN CUST_ORDER_PAYMENT USING(TRANSACTION_ID)
    JOIN CUST_DETAIL_ORDER ON ORDER_ID=MAST_ORDER_ID
    JOIN EMP_HR HR ON HR.ID=PIC_CASHIER
    JOIN FOOD_BEVERAGES_INFO F ON F.ID=FOOD_ID
    WHERE TRANSACTION_ID=TRANS_ID);
END;

DECLARE
    I_TRANS_ID NUMERIC:=61;
    V_OUT_TAB TAB_DETORDERS_CASHIER;
BEGIN
    GET_DETORDERS_AND_CASHIER_BY_PAYMENT_V2(I_TRANS_ID,V_OUT_TAB);
    FOR I IN 1..V_OUT_TAB.COUNT LOOP
        DBMS_OUTPUT.PUT_LINE('HRN: '||V_OUT_TAB(I).HRN||' '||'FNAME: '||V_OUT_TAB(I).FNAME||' '||V_OUT_TAB(I).FPRICE);
    END LOOP;
END;

CREATE OR REPLACE TYPE RETURNING_NUMERIC_TAB IS TABLE OF NUMERIC;

CREATE OR REPLACE PROCEDURE CLEANUP_ORDER(
    I_DATE IN VARCHAR2,
    V_RETURN OUT RETURNING_NUMERIC_TAB
)AS
BEGIN
    DELETE FROM CUST_DETAIL_ORDER WHERE MAST_ORDER_ID IN (
        SELECT ORDER_ID FROM CUST_DETAIL_ORDER
        JOIN CUST_MAST_ORDER ON MAST_ORDER_ID=ORDER_ID
        WHERE PAYMENT_STATUS='UNCOMPLETED' AND TRUNC(DATE_INPUT)=I_DATE
    );
    
    DELETE FROM CUST_MAST_ORDER WHERE DATE_INPUT IN(
        SELECT DISTINCT DATE_INPUT FROM CUST_MAST_ORDER WHERE PAYMENT_STATUS='UNCOMPLETED'
    ) RETURNING ORDER_ID BULK COLLECT INTO V_RETURN;
END;

DECLARE
    V_TEMP_RET DEL_CUST_M_ORDER;
BEGIN
    V_TEMP_RET:=DEL_CUST_M_ORDER(0,'UNCOMPLETED');
    DBMS_OUTPUT.PUT_LINE(V_TEMP_RET.O_ID||' '||V_TEMP_RET.O_PAYMENT);
END;

DECLARE
    I_RETURN_TAB RETURNING_NUMERIC_TAB:=RETURNING_NUMERIC_TAB();
BEGIN
    CLEANUP_ORDER('16-MAY-2021', I_RETURN_TAB);
    FOR I IN 1..I_RETURN_TAB.COUNT LOOP
        DBMS_OUTPUT.PUT_LINE('ORDER: '||I_RETURN_TAB(I));
    END LOOP;
END;

CREATE OR REPLACE TYPE FOOD_INGRIDIENT AS OBJECT ( 
   INGRIDIENT_NAME          VARCHAR2(30),
   INGRIDIENT_QTY           NUMERIC);

CREATE OR REPLACE TYPE FOOD_RECIPE AS OBJECT (
  MEAL_NAME       VARCHAR(25),
  COOK_TIME       NUMERIC,
  COOK_TREATEMENT VARCHAR2(20),
  COOK_NOTES       VARCHAR2(25),
  FOOD_I           FOOD_INGRIDIENT,
  MEMBER PROCEDURE DISPLAY_RECIPE ( SELF IN OUT NOCOPY FOOD_RECIPE ));

CREATE OR REPLACE TYPE BODY FOOD_RECIPE AS
    MEMBER PROCEDURE DISPLAY_RECIPE ( SELF IN OUT NOCOPY FOOD_RECIPE ) IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(MEAL_NAME);
        DBMS_OUTPUT.PUT_LINE(COOK_TREATEMENT || ' '  || COOK_TIME);
        DBMS_OUTPUT.PUT_LINE(COOK_NOTES);
        DBMS_OUTPUT.PUT_LINE(FOOD_I.INGRIDIENT_NAME || ' '  || FOOD_I.INGRIDIENT_QTY||' '||'-------');
    END;
END;

CREATE OR REPLACE TYPE MEALS_AT_MENU_VAT AS TABLE OF FOOD_RECIPE;

DECLARE
    MEALS_AT_MENU MEALS_AT_MENU_VAT:=MEALS_AT_MENU_VAT();
    I_CATEGORY VARCHAR2(15):='FOOD';
    CURSOR NAME_CUR IS
        SELECT NAME FROM FOOD_BEVERAGES_INFO WHERE CATEGORY=I_CATEGORY;
    FETCH_T NAME_CUR%ROWTYPE;
    TYPE FETCH_TT IS TABLE OF FETCH_T%TYPE;
    L_FOOD_MENU FETCH_TT;
BEGIN
    OPEN NAME_CUR;
    FETCH NAME_CUR BULK COLLECT INTO L_FOOD_MENU;
    CLOSE NAME_CUR;
    FOR I IN 1..L_FOOD_MENU.COUNT LOOP
        MEALS_AT_MENU.EXTEND();
        MEALS_AT_MENU(I):=FOOD_RECIPE(L_FOOD_MENU(I).NAME,I,'DIREBUS','NO NOTES',FOOD_INGRIDIENT('SEMBARANG',I));
    END LOOP;
    
    FOR ID IN 1..MEALS_AT_MENU.COUNT LOOP
        MEALS_AT_MENU(ID).DISPLAY_RECIPE();
    END LOOP;
END;

CREATE TABLE DEL_BACKUP_PAYMENT_ORDER(BACKUP_ID NUMERIC);

CREATE OR REPLACE TYPE TRANSACTIONS_TAB_DEL AS TABLE OF NUMERIC;

CREATE OR REPLACE PROCEDURE DELETE_TRANSACTION_BYCASHIER(
    NIK_CASHIER IN NUMERIC
)AS
    V_TRANSACTIONS_TAB TRANSACTIONS_TAB_DEL;
    TYPE L_TRANS_TAB IS TABLE OF NUMERIC;
    V_TTAB L_TRANS_TAB;
BEGIN
    DELETE FROM CUST_ORDER_PAYMENT WHERE TRANSACTION_ID IN (
        SELECT TRANSACTION_ID FROM CUST_ORDER_PAYMENT
        JOIN CUST_DETAIL_PAYMENT USING(TRANSACTION_ID)
        JOIN EMP_HR ON PIC_CASHIER=EMP_HR.ID
        WHERE NIK=NIK_CASHIER
    )RETURNING TRANSACTION_ID BULK COLLECT INTO V_TRANSACTIONS_TAB;
    
    DELETE FROM CUST_DETAIL_PAYMENT WHERE TRANSACTION_ID IN (
        SELECT TRANSACTION_ID FROM CUST_DETAIL_PAYMENT
        JOIN EMP_HR ON PIC_CASHIER=EMP_HR.ID
        WHERE NIK=NIK_CASHIER
    );
    
    INSERT INTO DEL_BACKUP_PAYMENT_ORDER(BACKUP_ID)
    SELECT * FROM TABLE (V_TRANSACTIONS_TAB);
END;

EXECUTE DELETE_TRANSACTION_BYCASHIER('111111');
SELECT * FROM DEL_BACKUP_PAYMENT_ORDER;
SELECT * FROM CUST_DETAIL_PAYMENT;

DECLARE
    TYPE NT_NAME IS TABLE OF VARCHAR2(25);
    N_NAME NT_NAME;
BEGIN
    SELECT NAME BULK COLLECT INTO N_NAME FROM EMP_HR;
    FOR IDX IN 1..N_NAME.COUNT
    LOOP
        DBMS_OUTPUT.PUT_LINE(N_NAME(IDX));
    END LOOP;
END;

