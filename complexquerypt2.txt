SELECT * FROM CASHIER_POS_RECORD;
SELECT * FROM EMP_HR;
SELECT * FROM REST_DETAIL_INVENTORY;
EXECUTE CASHIER_ABSENT('222222','POS 2');
DELETE FROM cashier_pos_record WHERE POS_ID=135;

create or replace PROCEDURE CASHIER_ABSENT(
    I_NIK IN VARCHAR2,
    I_POS_NAME IN VARCHAR2
)AS
V_NIK VARCHAR2(20):=I_NIK;
V_POS_NAME VARCHAR2(20):=I_POS_NAME;
TEMP_SYSDATE DATE;
TEMP_EMP_ID NUMERIC;
TEMP_INVT_ID NUMERIC;
TEMP_POSITION EMP_HR.POSITION%TYPE;
BEGIN
    SELECT INPUT_DATE, HR.ID,RDI.ID,HR.POSITION INTO TEMP_SYSDATE, TEMP_EMP_ID,TEMP_INVT_ID,TEMP_POSITION
    FROM CASHIER_POS_RECORD CPR
    JOIN EMP_HR HR ON HR.ID=CPR.CASHIER_ID
    JOIN REST_DETAIL_INVENTORY RDI ON RDI.ID=CPR.POS_ID
    WHERE TRUNC(CPR.INPUT_DATE)= TRUNC(SYSDATE) AND HR.NIK=V_NIK AND RDI.INVT_NAME=V_POS_NAME;

        DBMS_OUTPUT.PUT_LINE('ITS UP '|| TEMP_SYSDATE||' '||TEMP_EMP_ID||' '|| TEMP_INVT_ID);
        IF (TEMP_POSITION='CASHIER' OR TEMP_POSITION='MANAGER') THEN
            UPDATE CASHIER_POS_RECORD SET SIGN_OUT_OFFICE=CURRENT_TIMESTAMP
            WHERE INPUT_DATE=TEMP_SYSDATE AND CASHIER_ID=TEMP_EMP_ID AND POS_ID=TEMP_INVT_ID;
            COMMIT;
        ELSE
            DBMS_OUTPUT.PUT_LINE('SORRY INPUT NOT ALLOWED');
        END IF;

    EXCEPTION
        WHEN NO_DATA_FOUND
        THEN
            SELECT ID,POSITION INTO TEMP_EMP_ID,TEMP_POSITION FROM EMP_HR WHERE NIK=V_NIK;
            SELECT ID INTO TEMP_INVT_ID FROM REST_DETAIL_INVENTORY WHERE INVT_NAME=V_POS_NAME;
            DBMS_OUTPUT.PUT_LINE('GO TO EXCEPTION '|| TEMP_EMP_ID||' '||TEMP_INVT_ID);
            IF (TEMP_POSITION='CASHIER' OR TEMP_POSITION='MANAGER') THEN
                INSERT INTO CASHIER_POS_RECORD(CASHIER_ID,POS_ID,SIGN_IN_OFFICE,INPUT_DATE)
                VALUES(TEMP_EMP_ID,TEMP_INVT_ID,CURRENT_TIMESTAMP,SYSDATE);
                COMMIT;
            ELSE
                DBMS_OUTPUT.PUT_LINE('SORRY INPUT NOT ALLOWED FROM EXCEPTION');
            END IF;
END;

CREATE OR REPLACE PROCEDURE RESET_SEQ(P_SEQ_NAME IN VARCHAR2)
AS
L_VAL NUMERIC;
BEGIN
    EXECUTE IMMEDIATE 'SELECT ' || P_SEQ_NAME || '.NEXTVAL FROM DUAL' INTO L_VAL;
    EXECUTE IMMEDIATE 'ALTER SEQUENCE '||P_SEQ_NAME||' INCREMENT BY -'||l_val||' MINVALUE 0';
    EXECUTE IMMEDIATE 'SELECT '||P_SEQ_NAME||'.NEXTVAL FROM DUAL' INTO L_VAL;
    EXECUTE IMMEDIATE 'ALTER SEQUENCE '||P_SEQ_NAME||' INCREMENT BY 1 MINVALUE 0';
END;

CREATE OR REPLACE PROCEDURE GETUSER_POS_INDATE(
    I_POS_NAME IN VARCHAR2,
    I_SYSDATE IN VARCHAR2,
    V_CASHIER_NAME OUT VARCHAR2
)
AS
V_POS_NAME VARCHAR2(20):=I_POS_NAME;
V_SYSDATE DATE:=to_date(I_SYSDATE);
BEGIN
    SELECT HR.NAME INTO V_CASHIER_NAME
    FROM CASHIER_POS_RECORD CPR
    JOIN REST_DETAIL_INVENTORY DI
    ON CPR.POS_ID=DI.ID
    JOIN EMP_HR HR
    ON HR.ID=CPR.CASHIER_ID
    WHERE DI.INVT_NAME=V_POS_NAME AND TRUNC(CPR.INPUT_DATE)=TRUNC(V_SYSDATE);
END;

DECLARE
CASHIER_NAME VARCHAR2(20);
BEGIN
GETUSER_POS_INDATE('POS 2','12-MAY-2021', CASHIER_NAME);
dbms_output.put_line(CASHIER_NAME);
END;

CREATE OR REPLACE PROCEDURE CHECK_DISH_AVAILABILITY(
    FOOD_NAME IN OUT VARCHAR2
)
AS 
V_OUTPUT_RESULT VARCHAR2(20);
BEGIN
    SELECT NAME INTO V_OUTPUT_RESULT FROM FOOD_BEVERAGES_INFO WHERE NAME=FOOD_NAME;
        FOOD_NAME:='AVAILABLE';
    EXCEPTION
        WHEN NO_DATA_FOUND
        THEN
            FOOD_NAME:='NOT AVAILABLE';
END;

DECLARE FOODIE VARCHAR2(20);
BEGIN
FOODIE:='BUBUR AYAM';
CHECK_DISH_AVAILABILITY(FOODIE);
dbms_output.put_line(FOODIE);
END;